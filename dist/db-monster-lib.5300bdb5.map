{"version":3,"sources":["../db-monster-test/db-monster-lib.js"],"names":["window","ENV","counter","data","_base","updateQuery","object","elapsed","Math","random","formatElapsed","value","str","parseFloat","toFixed","minutes","floor","comps","split","lpad","elapsedClassName","getElapsedClassName","className","query","waiting","cleanQuery","generateRow","keepIdentity","nbQueries","lastMutationId","lastSample","topFiveQueries","queries","l","j","push","i","source","countClassName","String","prototype","padding","toLength","repeat","length","concat","mutationsValue","body","document","querySelector","theFirstChild","firstChild","sliderContainer","createElement","style","cssText","slider","text","innerHTML","id","setAttribute","addEventListener","e","mutations","target","appendChild","insertBefore","generateData","getData","oldData","rows","dbname","row","toArray","timeout"],"mappings":"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","file":"db-monster-lib.5300bdb5.map","sourceRoot":"../src/_html-web","sourcesContent":["window.ENV = function () {'use strict';\n  var counter = 0;\n  var data;\n  var _base;\n  if (!(_base = String.prototype).lpad)\n    _base.lpad = function (padding, toLength) {\n      return padding.repeat((toLength - this.length) / padding.length).concat(this);\n    };\n\n  function formatElapsed(value) {\n    var str = parseFloat(value).toFixed(2);\n    if (value > 60) {\n      var minutes = Math.floor(value / 60);\n      var comps = (value % 60).toFixed(2).split('.');\n      var seconds = comps[0].lpad('0', 2);\n      var ms = comps[1];\n      str = minutes + \":\" + seconds + \".\" + ms;\n    }\n    return str;\n  }\n\n  function getElapsedClassName(elapsed) {\n    var className = 'Query elapsed';\n    if (elapsed >= 10.0) {\n      className += ' warn_long';\n    }\n    else if (elapsed >= 1.0) {\n      className += ' warn';\n    }\n    else {\n      className += ' short';\n    }\n    return className;\n  }\n\n  function countClassName(queries) {\n    var countClassName = \"label\";\n    if (queries >= 20) {\n      countClassName += \" label-important\";\n    }\n    else if (queries >= 10) {\n      countClassName += \" label-warning\";\n    }\n    else {\n      countClassName += \" label-success\";\n    }\n    return countClassName;\n  }\n\n  function updateQuery(object) {\n    if (!object) {\n      object = {};\n    }\n    var elapsed = Math.random() * 15;\n    object.elapsed = elapsed;\n    object.formatElapsed = formatElapsed(elapsed);\n    object.elapsedClassName = getElapsedClassName(elapsed);\n    object.query = \"SELECT blah FROM something\";\n    object.waiting = Math.random() < 0.5;\n    if (Math.random() < 0.2) {\n      object.query = \"<IDLE> in transaction\";\n    }\n    if (Math.random() < 0.1) {\n      object.query = \"vacuum\";\n    }\n    return object;\n  }\n\n  function cleanQuery(value) {\n    if (value) {\n      value.formatElapsed = \"\";\n      value.elapsedClassName = \"\";\n      value.query = \"\";\n      value.elapsed = null;\n      value.waiting = null;\n    } else {\n      return {\n        query: \"***\",\n        formatElapsed: \"\",\n        elapsedClassName: \"\"\n      };\n    }\n  }\n\n  function generateRow(object, keepIdentity, counter) {\n    var nbQueries = Math.floor((Math.random() * 10) + 1);\n    if (!object) {\n      object = {};\n    }\n    object.lastMutationId = counter;\n    object.nbQueries = nbQueries;\n    if (!object.lastSample) {\n      object.lastSample = {};\n    }\n    if (!object.lastSample.topFiveQueries) {\n      object.lastSample.topFiveQueries = [];\n    }\n    if (keepIdentity) {\n      // for Angular optimization\n      if (!object.lastSample.queries) {\n        object.lastSample.queries = [];\n        for (var l = 0; l < 12; l++) {\n          object.lastSample.queries[l] = cleanQuery();\n        }\n      }\n      for (var j in object.lastSample.queries) {\n        var value = object.lastSample.queries[j];\n        if (j <= nbQueries) {\n          updateQuery(value);\n        } else {\n          cleanQuery(value);\n        }\n      }\n    } else {\n      object.lastSample.queries = [];\n      for (var j = 0; j < 12; j++) {\n        if (j < nbQueries) {\n          var value = updateQuery(cleanQuery());\n          object.lastSample.queries.push(value);\n        } else {\n          object.lastSample.queries.push(cleanQuery());\n        }\n      }\n    }\n    for (var i = 0; i < 5; i++) {\n      var source = object.lastSample.queries[i];\n      object.lastSample.topFiveQueries[i] = source;\n    }\n    object.lastSample.nbQueries = nbQueries;\n    object.lastSample.countClassName = countClassName(nbQueries);\n    return object;\n  }\n\n  function getData(keepIdentity) {\n    var oldData = data;\n    if (!keepIdentity) { // reset for each tick when !keepIdentity\n      data = [];\n      for (var i = 1; i <= ENV.rows; i++) {\n        data.push({ dbname: 'cluster' + i, query: \"\", formatElapsed: \"\", elapsedClassName: \"\" });\n        data.push({ dbname: 'cluster' + i + ' slave', query: \"\", formatElapsed: \"\", elapsedClassName: \"\" });\n      }\n    }\n    if (!data) { // first init when keepIdentity\n      data = [];\n      for (var i = 1; i <= ENV.rows; i++) {\n        data.push({ dbname: 'cluster' + i });\n        data.push({ dbname: 'cluster' + i + ' slave' });\n      }\n      oldData = data;\n    }\n    for (var i in data) {\n      var row = data[i];\n      if (!keepIdentity && oldData && oldData[i]) {\n        row.lastSample = oldData[i].lastSample;\n      }\n      if (!row.lastSample || Math.random() < ENV.mutations()) {\n        counter = counter + 1;\n        if (!keepIdentity) {\n          row.lastSample = null;\n        }\n        generateRow(row, keepIdentity, counter);\n      } else {\n        data[i] = oldData[i];\n      }\n    }\n    return {\n      toArray: function () {\n        return data;\n      }\n    };\n  }\n\n  var mutationsValue = 0.5;\n\n  function mutations(value) {\n    if (value) {\n      mutationsValue = value;\n      return mutationsValue;\n    } else {\n      return mutationsValue;\n    }\n  }\n\n  var body = document.querySelector('body');\n  var theFirstChild = body.firstChild;\n\n  var sliderContainer = document.createElement('div');\n  sliderContainer.style.cssText = \"display: flex\";\n  var slider = document.createElement('input');\n  var text = document.createElement('label');\n  text.innerHTML = 'mutations : ' + (mutationsValue * 100).toFixed(0) + '%';\n  text.id = \"ratioval\";\n  slider.setAttribute(\"type\", \"range\");\n  slider.style.cssText = 'margin-bottom: 10px; margin-top: 5px';\n  slider.addEventListener('change', function (e) {\n    ENV.mutations(e.target.value / 100);\n    document.querySelector('#ratioval').innerHTML = 'mutations : ' + (ENV.mutations() * 100).toFixed(0) + '%';\n  });\n  sliderContainer.appendChild(text);\n  sliderContainer.appendChild(slider);\n  body.insertBefore(sliderContainer, theFirstChild);\n\n  return {\n    generateData: getData,\n    rows: 50,\n    timeout: 0,\n    mutations: mutations\n  };\n}();"]}